#!/bin/bash

# Hook type: Git server side, post-receive
# Auto tag on merging PRs to the target branch ${1}
# This is intended ot be used in puppet modules since the tag name
# is taken from the file metadata.json

set -e

TARGET_BRANCH=${1:-master}
LOGLEVEL=${2:-INFO}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source ${DIR}/utils.sh 


pull_request_regex="Merge pull request #([0-9]+) in ([^\/]+)\/([^ ]+) from ([^ ]+) to ${TARGET_BRANCH}"

while read oldrev newrev refname
do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ -n "$branch" ] && [ "$branch" == "$TARGET_BRANCH" ]; then
       commit_message="$(git log --format=%B -n 1 ${newrev})"
       if [[ ${commit_message} =~ ${pull_request_regex} ]]; then
          pr_number=${BASH_REMATCH[1]}
          project=${BASH_REMATCH[2]}
          repo_slug=${BASH_REMATCH[3]}
          from_branch=${BASH_REMATCH[4]}
          LOG_FILE="${project}_${repo_slug}_post-receive.log"
          log_debug "Creating tag for PR: ${pr_number} from branch ${from_branch} to ${branch}" ${LOG_FILE} 
          metadata_version=$(git show ${newrev}:metadata.json | grep version | cut -d'"' -f4)
          log_debug "Branch: ${from_branch}, version from metadata.json: ${metadata_version}"  ${LOG_FILE}
          git tag -a "${metadata_version}" -m"Automated tag for version ${metadata_version}" "${branch}" || (log_error "Tag creation failed. Maybe tag ${metadata_version} already exists?" ${LOG_FILE} && exit -1)
          log_info "Automated tag for version ${metadata_version}" ${LOG_FILE}
       fi
     fi
done
